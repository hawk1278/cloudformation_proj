{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Baseline VPC and networking components template.",
    "Parameters": {
        "VpcCidr": {
            "Description": "First 2 octects of CIDR block designation for VPC.",
            "Type": "String",
            "AllowedPattern": "[0-9]{1,3}\\.[0-9]{1,3}",
            "Default": "10.92"
        },
        "VPCName": {
            "Description": "Custom VPC name.",
            "Type": "String",
            "Default": "NOT-PROD-DEVOPS"
        },
        "UseDNSSupport": {
            "Description": "Specifies whether DNS resolution is supported for the VPC.",
            "Type": "String",
            "AllowedValues": ["true", "false"],
            "Default": "true"
        },
        "UseDNSHostnames": {
            "Description": "Specifies whether the instances launched in the VPC get DNS hostnames.",
            "Type": "String",
            "AllowedValues": ["true", "false"],
            "Default": "true"
        },
        "Environment" : {
          "Description" : "Environment the stack is deployed to such as prodution, test, or development.",
          "Type" : "String",
          "Default" : "DEV",
          "AllowedValues" : ["STAGE","DEV","TEST","PROD"]
      },
      "Organization": {
          "Description": "Organization the VPC is associated with.",
          "Type": "String",
          "Default": "GeoInt Services"
      },
      "POC": {
          "Description": "The name to identify the VPN in the AWS Console",
          "Type": "String",
          "Default": "Test POC"
      },
      "SystemTag": {
          "Description": "System to tag resources with.",
          "Type": "String",
          "Default": "DEVOPS"
      }
    },

    "Mappings": {},

    "Conditions": {
        "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "Environment"}, "prod"]},
        "CreateDevResources" : {"Fn::Equals" : [ {"Ref": "Environment"}, "dev"]},
        "CreateTestResoures" : {"Fn::Equals" : [ {"Ref": "Environment"}, "test"]}        
    },

    "Resources": {
        "DevOpsVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {"Fn::Join": [ ".", [ { "Ref": "VpcCidr" }, "0", "0/16" ]]},
                "EnableDnsSupport": { "Ref": "UseDNSSupport" },
                "EnableDnsHostnames": { "Ref": "UseDNSHostnames" },
                "Tags": [ 
                    { "Key": "Name", "Value": {"Fn::Join":["-",[{"Ref":"Environment"},{"Ref":"VPCName"}]]}},
                    { "Key": "Environment", "Value": { "Ref": "Environment" }},
                    { "Key": "Organization", "Value": {"Ref": "Organization" }},
                    { "Key": "POC", "Value": { "Ref": "POC" }},
                    { "Key": "System",  "Value": "SystemTag"}
                ]
            }
        },

        "InetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    { "Key": "System", "Value": { "Ref": "SystemTag"}},
                    {"Key": "Name", "Value": {"Fn::Join": ["-",["NOT","PROD","DEVOPS",{"Ref":"Environment"},"Internet Gateway"]]}}
                ]
            }
        },

      "VPCGatewayAttachment": {
          "DependsOn": ["DevOpsVPC", "InetGateway"],
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
              "VpcId": {"Ref": "DevOpsVPC" },
              "InternetGatewayId": { "Ref": "InetGateway" }
        }
      },

    "DefaultRoute": {
      "DependsOn": ["PublicRouteTable","InetGateway"],        
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "GatewayId": {"Ref": "InetGateway"},
        "DestinationCidrBlock": "0.0.0.0/0"}
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
          "VpcId": {"Ref": "DevOpsVPC"},
          "Tags": [
          {"Key": "System", "Value": {"Ref": "SystemTag"}},
          {"Key": "Name", "Value": {"Fn::Join":["-",["NOT","PROD","DEVOPS",{"Ref":"Environment"},"Public Route"]]}}
        ]
      }
    },

    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "DevOpsVPC"},
        "Tags": [
          {"Key": "System", "Value": { "Ref": "SystemTag"}},
          {"Key": "Name", "Value": {"Fn::Join":["-",["NOT","PROD","DEVOPS",{"Ref":"Environment"},"Private Route"]]}}
        ]
      }
    },

    "BastionPubSubnet": {
            "DependsOn": [ "DevOpsVPC" ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": "us-west-2a",
                "MapPublicIpOnLaunch": true,
                "VpcId": { "Ref": "DevOpsVPC" },
                "CidrBlock": { "Fn::Join": [".", [ { "Ref": "VpcCidr" }, "255", "0/25"]]},
                "Tags": [
                    { "Key": "Application", "Value": { "Ref": "AWS::StackName" }},
                    { "Key": "Name", "Value": {"Fn::Join":["-",["NOT","PROD","DEVOPS",{"Ref":"Environment"},"Bastion Public Subnet","1"]]} },
                    { "Key": "POC", "Value": { "Ref": "POC" }},
                    { "Key": "System", "Value": { "Ref": "SystemTag" }}
                ]
            }
    },

    "BastionPrivSubnet": {
           "DependsOn": ["DevOpsVPC"],    
           "Type": "AWS::EC2::Subnet",
           "Properties": {
               "CidrBlock": {"Fn::Join": [".",[{"Ref": "VpcCidr"},"255","128/25"]]},
               "VpcId": {"Ref": "DevOpsVPC"},
               "Tags": [
                   {"Key": "Application","Value": {"Ref": "AWS::StackName"}},
                    { "Key": "Name", "Value": {"Fn::Join":["-",["NOT","PROD","DEVOPS",{"Ref":"Environment"},"Bastion Private Subnet","1"]]} },
                   {"Key": "POC", "Value": {"Ref": "POC"}},
                   {"Key": "System", "Value": { "Ref": "SystemTag"}}
               ]
           }
      },

    "NatGateway": {
                "DependsOn": [ "NATElasticIP"],
                "Type": "AWS::EC2::NatGateway",
                "Properties": {
                    "SubnetId": {"Ref": "BastionPubSubnet" },
                    "AllocationId": { "Fn::GetAtt": ["NATElasticIP", "AllocationId"]}
                }
        },
    "NATInetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
               "RouteTableId": { "Ref": "PrivateRouteTable"},
               "DestinationCidrBlock": "0.0.0.0/0",
               "NatGatewayId": {"Ref": "NatGateway"}
            }
        },
      
    "NATElasticIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {"Domain": "vpc"}
        }
                  
 },
    
 "Outputs": {
       "DevOpsVPCId": {
           "Description": "DevOps VPC id.",
           "Value" : {"Ref": "DevOpsVPC"},
           "Export" :  { "Name" : "DevOpsVPCId" }
       },
       "BastionPublicSubnetId": {
           "Description": "Bastion public subnet id.",
           "Value": {"Ref": "BastionPubSubnet"},
           "Export": {"Name": "BastionPubSubnetId"}
       },
       "BastionPrivateSubnetId": {
           "Description": "Bastion private subnet id.",
           "Value": {"Ref": "BastionPrivSubnet"},
           "Export": {"Name": "BastionPrivSubnetId"}
       },
       "PrivRouteTableId": {
           "Description": "Private route table id.",
           "Value": {"Ref": "PrivateRouteTable"},
           "Export":{"Name": "PrivRouteTableId"}
       },
       "PubRouteTableId": {
           "Description": "Public route table id.",
           "Value": {"Ref": "PublicRouteTable"},
           "Export": {"Name":"PubRouteTableId"}
       }
       
   }
}
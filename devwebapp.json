
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Parameters": {
     "InstanceName" : {
         "Description" : "Name of the instance deployed.",
         "Type" : "String"
     },
      "KeyName" : {
          "Description" : "Name of existing EC2 key pair to enable SSH access to instances.",
          "Type" : "AWS::EC2::KeyPair::KeyName",
          "ConstraintDescription" : "Must be a valid EC2 key pair."
      },
      "InstanceType" : {
          "Description" : "Type of EC2 instance to launch.",
          "Type": "String",
          "Default" : "t2.micro",
          "AllowedValues" : ["t2.micro"],
          "ConstraintDescription" : "Must be a valid EC2 instance type."
      },
      "Software" : {
          "Description" : "Software installed and version in the following format: software_a-1.0 | software_b-1.0",
          "Type" : "String"
      },
      "Services" : {
          "Description" : "Services running on instances.",
          "Type" : "String"
      },
      "Environment" : {
          "Description" : "Environment the stack is deployed to such as prodution, test, or development.",
          "Type" : "String",
          "Default" : "dev",
          "AllowedValues" : ["dev","test","prod"]
      },
      "Owner" : {
          "Description" : "Who owns and maintains the resources in the stack.",
          "Type" : "String"
      },
      "Customer" : {
          "Description" : "Who is the primary user of the resources",
          "Type" : "String"
      },
      "NodeName" : {
          "Description" : "Name of the node.  This primarily applies to EC2 instances.",
          "Type" : "String"
      },
      "ClusterName" : {
          "Description" : "The cluster a node belongs to if applicable.",
          "Type" :"String"
      },
      "SecurityGroup" : {
          "Description": "Security group id for the instance.",
          "Type" : "String",
          "Default" : ""
      },
      "WebServerPort" : {
          "Description" : "Port used by web server.",
          "Default": "80",
          "Type" :"Number",
          "MinValue" : "80",
          "MaxValue" : "65535"          
      },
      "Subnet" : {
          "Description" : "Valid subnet within the VPC",
          "Type" : "String",
          "AllowedValues" : ["subnet-3c2a6a4a","subnet-e130a6cb","subnet-fcb826a4"],
          "Default" : "subnet-3c2a6a4a"
      }
    },
    "Mappings": {
        "RegionMap" : {
            "us-east-1" : {
                "AMI" : "ami-6869aa05"
            }
        }
    },
    "Conditions": {
        "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "Environment"}, "prod"]},
        "CreateDevResources" : {"Fn::Equals" : [ {"Ref": "Environment"}, "dev"]},
        "CreateTestResoures" : {"Fn::Equals" : [ {"Ref": "Environment"}, "test"]}        
    },
    "Resources": {
      "Instance01" : {
          "Type" : "AWS::EC2::Instance",
          "Condition" : "CreateProdResources",
          "Metadata" : {
              "AWS::CloudFormation::Init" : { 
                  "config": { 
                      "packages" : { 
                          "yum" : { 
                              "httpd" : [], "php" : []
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : { "enabled" : "true", "ensureRunning" : "true" }
                            }
                        },
                        "files" : {},
                        "sources" : {},
                        "users" : {
                        }
                  }
                }
            }, 
        "Properties" : {
              "Tags" : [
                  {"Key":"Owner", "Value" : {"Ref": "Owner"} },
                  {"Key":"Customer", "Value":{"Ref":"Customer"} },
                  {"Key" : "Software", "Value" :{"Ref" : "Software"} },
                  {"Key":"Services", "Value":{"Ref":"Services"} },
                  {"Key":"NodeName", "Value":{"Ref":"NodeName"} },
                  {"Key":"ClusterName", "Value": {"Ref":"ClusterName"} },
                  {"Key":"Environment", "Value":{"Ref":"Environment"} }
              ],
              "KeyName" : { "Ref" : "KeyName" },
              "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
              "SubnetId" : { "Ref" : "Subnet" },
              "ImageId" : { "Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region"},"AMI"]},
              "InstanceType" : {"Ref" : "InstanceType" },
              "UserData" : {"Fn::Base64": {"Fn::Join" : ["",[
                  "#!/bin/bash \n",
                  "yum update -y aws-cfn-bootstrap \n",
                  "/opt/aws/bin/cfn-init -s ", {"Ref":"AWS::StackName"},
                  "  -r Instance01",
                  "  --region ", { "Ref":"AWS::Region" },"\n"
              ]
              ]}}
        }
     },
    "Instance02" : {
          "Type" : "AWS::EC2::Instance",
          "Condition" : "CreateProdResources",
          "Metadata" : {
              "AWS::CloudFormation::Init" : { 
                  "config": { 
                      "packages" : { 
                          "yum" : { 
                              "httpd" : [], "php" : []
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : { "enabled" : "true", "ensureRunning" : "true" }
                            }
                        },
                        "files" : {},
                        "sources" : {},
                        "users" : {
                        }
                  }
                }
            }, 
        "Properties" : {
              "Tags" : [
                  {"Key":"Owner", "Value" : {"Ref": "Owner"} },
                  {"Key":"Customer", "Value":{"Ref":"Customer"} },
                  {"Key" : "Software", "Value" :{"Ref" : "Software"} },
                  {"Key":"Services", "Value":{"Ref":"Services"} },
                  {"Key":"NodeName", "Value":{"Ref":"NodeName"} },
                  {"Key":"ClusterName", "Value": {"Ref":"ClusterName"} },
                  {"Key":"Environment", "Value":{"Ref":"Environment"} }
              ],
              "KeyName" : { "Ref" : "KeyName" },
              "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
              "SubnetId" : { "Ref" : "Subnet" },
              "ImageId" : { "Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region"},"AMI"]},
              "InstanceType" : {"Ref" : "InstanceType" },
              "UserData" : {"Fn::Base64": {"Fn::Join" : ["",[
                  "#!/bin/bash \n",
                  "yum update -y aws-cfn-bootstrap \n",
                  "/opt/aws/bin/cfn-init -s ", {"Ref":"AWS::StackName"},
                  "  -r Instance02",
                  "  --region ", { "Ref":"AWS::Region" },"\n"
              ]
              ]}}
        }
     },
    "DevInstance01" : {
          "Type" : "AWS::EC2::Instance",
          "Condition" : "CreateDevResources",
          "Metadata" : {
              "AWS::CloudFormation::Init" : { 
                  "config": { 
                      "packages" : { 
                          "yum" : { 
                              "httpd" : [], "php" : [], "python27-pip" : [], "python27-virtualenv" : []
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : { "enabled" : "true", "ensureRunning" : "true" }
                            }
                        },
                        "files" : {},
                        "sources" : {},
                        "users" : {
                            "rohara" : {
                                "groups" : [ "wheel"],
                                "homeDir": "/home/rohara"
                            }
                        }
                  }
                }
            }, 
        "Properties" : {
              "Tags" : [
                  {"Key":"Owner", "Value" : {"Ref": "Owner"} },
                  {"Key":"Customer", "Value":{"Ref":"Customer"} },
                  {"Key" : "Software", "Value" :{"Ref" : "Software"} },
                  {"Key":"Services", "Value":{"Ref":"Services"} },
                  {"Key":"NodeName", "Value":{"Ref":"NodeName"} },
                  {"Key":"ClusterName", "Value": {"Ref":"ClusterName"} },
                  {"Key":"Environment", "Value":{"Ref":"Environment"} }
              ],
              "KeyName" : { "Ref" : "KeyName" },
              "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
              "SubnetId" : { "Ref" : "Subnet" },
              "ImageId" : { "Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region"},"AMI"]},
              "InstanceType" : {"Ref" : "InstanceType" },
              "UserData" : {"Fn::Base64": {"Fn::Join" : ["",[
                  "#!/bin/bash \n",
                  "yum update -y aws-cfn-bootstrap \n",
                  "/opt/aws/bin/cfn-init -s ", {"Ref":"AWS::StackName"},
                  "  -r DevInstance01",
                  "  --region ", { "Ref":"AWS::Region" },"\n"
              ]
              ]}}
        }
     }
  },
  "Outputs" : {
      "Instance01" : {
          "Value": { "Fn::GetAtt" : ["Instance01","PublicIp"] },
          "Description" : "Public IP of Instance01"                   
      },
      "Insance02": {
          "Value":{ "Fn::GetAtt": ["Instance02", "PublicIp"]},
          "Description" : "Public IP of Instance02"          
      }
  }
}
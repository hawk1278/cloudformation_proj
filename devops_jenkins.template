
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "LastUpdated": "",
        "UpdatedBy": "",
        "Commetns": ""
    },
    "Description": "Eventual Jenkins build out.",
    "Parameters": {
      "KeyName" : {
          "Description" : "Name of existing EC2 key pair to enable SSH access to instances.",
          "Type" : "AWS::EC2::KeyPair::KeyName",
          "Default": "myec2key",
          "ConstraintDescription" : "Must be a valid EC2 key pair."
      },
      "InstanceType" : {
          "Description" : "Type of EC2 instance to launch.",
          "Type": "String",
          "Default" : "t2.micro",
          "AllowedValues" : ["t2.micro"],
          "ConstraintDescription" : "Must be a valid EC2 instance type."
      },
      "POC": {
          "Description": "Point of contact",
          "Type": "String",
          "Default": "Name=Batman|Phone=8675309|Email=ohara.richard@gmail.com"
      },
      "System": {
          "Description": "Test",
          "Type": "String",
          "Default": "Devops"
      },
      "Backup":{
          "Description": "Do we back up this instance",
          "Type": "String",
          "Default": "false"
      },
      "Environment" : {
          "Description" : "Environment the stack is deployed to such as prodution, test, or development.",
          "Type" : "String",
          "Default" : "DEV",
          "AllowedValues" : ["DEV","TEST","PROD"]
      },
      "SecurityGroup" : {
          "Description": "Security group id for the instance.",
          "Type" : "String",
          "Default" : ""
      },
      "Function": {
          "Description": "Role of the server",
          "Type": "String",
          "Default": "Jenkins"
      },
      "WebServerPort" : {
          "Description" : "Port used by web server.",
          "Default": "80",
          "Type" :"Number",
          "MinValue" : "80",
          "MaxValue" : "65535"          
      },
      "Subnets": {
          "Description": "",
          "Type": "CommaDelimitedList",
          "Default":"subnet-b7c4edfe,subnet-412c576c"
      },
      "VpcId": {
          "Description": "Id of a VPC",
          "Type": "String",
          "Default": "vpc-10f77676"
      },
      "ServerPort": {
          "Description": "Server port",
          "Type": "String",
          "Default": "8080"
      },
      "ELBPort":{
          "Description": "ELB port",
          "Type": "String",
          "Default": "80"
      }
    },
    "Mappings": {
        "RegionMap" : {
            "us-east-1" : {
                "AMI" : "ami-6869aa05"
            }
        }
    },
    "Resources": {
        "JenkinsPubSecGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Jenkins public security group",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "ToPort": "80"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "8080",
                        "ToPort": "8080"
                    }
                ],
                "Tags": [
                    {"Key":"Environment","Value":{"Ref":"Environment"}},
                    {"Key":"POC","Value":{"Ref":"POC"}}
                ],
                "VpcId": {"Ref":"VpcId"}
            }

        },
        "JeninsMaster": {
            "Type":"AWS::EC2::Instance",
            "Properties" : {
                "KeyName" : { "Ref" : "KeyName" },
                "SecurityGroupIds" : [{ "Ref" : "JenkinsPubSecGroup" }],
                "SubnetId" :{"Fn::Select": ["0",{"Ref":"Subnets"}]},
                "ImageId" : { "Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region"},"AMI"]},
                "InstanceType" : {"Ref" : "InstanceType" },
                "Tags":[
                    {"Key" : "Name", "Value" :{"Fn::Join":[" ",[{"Ref":"System"},{"Ref":"Environment"},{"Ref":"Function"}]]}},                
                    {"Key" : "Function", "Value" :{"Ref" : "Function"} },
                    {"Key":"System", "Value":{"Ref":"System"} },
                    {"Key":"Backup", "Value":{"Ref":"Backup"} },                    
                    {"Key":"POC", "Value": {"Ref":"POC"} },
                    {"Key":"Environment", "Value":{"Ref":"Environment"} }

                ]
             }
        },
        "JenkinsLaunchConfig" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "KeyName" : { "Ref" : "KeyName" },
                "SecurityGroups" : [{ "Ref" : "JenkinsPubSecGroup" }],
                "ImageId" : { "Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region"},"AMI"]},
                "InstanceType" : {"Ref" : "InstanceType" }
            }
        },
        
        "JenkinsASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {"Ref": "JenkinsLaunchConfig"},
                "MinSize": "1",
                "MaxSize": "3",
                "DesiredCapacity": "2",
                "Tags" : [
                        {"PropagateAtLaunch":"true","Key" : "Name", "Value" :{"Fn::Join":[" ",[{"Ref":"System"},{"Ref":"Environment"},{"Ref":"Function"}]]}},                
                        {"PropagateAtLaunch":"true","Key" : "Function", "Value" :{"Ref" : "Function"} },
                        {"PropagateAtLaunch":"true","Key":"System", "Value":{"Ref":"System"} },
                        {"PropagateAtLaunch":"true","Key":"Backup", "Value":{"Ref":"Backup"} },                    
                        {"PropagateAtLaunch":"true","Key":"POC", "Value": {"Ref":"POC"} },
                        {"PropagateAtLaunch":"true","Key":"Environment", "Value":{"Ref":"Environment"} }
                    ],            
                "VPCZoneIdentifier": [{"Fn::Select": ["0",{"Ref":"Subnets"}]}]
            }
        }

    }
}